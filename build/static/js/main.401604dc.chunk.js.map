{"version":3,"sources":["components/ThemeContext.js","client.js","components/Intro.js","components/ProjectListItem.js","components/ProjectList.js","components/ProjectPage.js","components/ThemeToggle.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","theme","toggleTheme","setState","prevState","this","Provider","value","props","children","Component","client","contenful","space","env","REACT_APP_SPACE_ID","accessToken","REACT_APP_ACCESS_TOKEN","Intro","className","scrollRan","style","fontSize","textStyle","startDelay","cursorColor","hideCursorAfterText","text","typeSpeed","ProjectListItem","project","fields","title","thumbnail","blurb","techStack","projectId","sys","id","to","src","file","url","ProjectList","projects","map","index","ProjectPage","context","useContext","useState","content","setContent","useParams","useEffect","console","log","getEntry","then","response","catch","error","livesiteUrl","href","target","githubUrl","elevatorPitch","featureImage","alt","dangerouslySetInnerHTML","__html","description","ThemeToggle","position","setPosition","onClick","prevPosition","left","defaultProps","Header","history","useHistory","pathname","useLocation","window","scrollTo","textDecoration","goBack","App","setProjects","setScrollRan","getEntries","items","setTimeout","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.401604dc.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\n\nconst ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  state = {\n    theme: \"light\",\n  };\n\n  toggleTheme = () => {\n    this.setState((prevState) => {\n      return {\n        theme: prevState.theme === \"light\" ? \"dark\" : \"light\",\n      };\n    });\n  };\n\n  render() {\n    const { theme } = this.state;\n    return (\n      <ThemeContext.Provider value={{ theme, toggleTheme: this.toggleTheme }}>\n        {\" \"}\n        {this.props.children}{\" \"}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport { ThemeContextProvider, ThemeContext };\n","import * as contenful from \"contentful\";\nimport env from \"react-dotenv\";\n\nconst client = contenful.createClient({\n    space: env.REACT_APP_SPACE_ID,\n    accessToken: env.REACT_APP_ACCESS_TOKEN,\n});\n\nexport default client;","import React from \"react\";\nimport TypeWriterEffect from \"react-typewriter-effect\";\n\nfunction Intro(props) {\n  return (\n    <div className=\"intro\">\n      {props.scrollRan === true ? (\n        <h1 className=\"intro-typewriter\" style={{ fontSize: \"40px\" }}>\n          Hi, my name is Tushar\n          <br />\n          I'm a full stack developer\n        </h1>\n      ) : (\n        <h1 className=\"intro-typewriter\">\n          <TypeWriterEffect\n            textStyle={{\n              fontSize: \"40px\",\n            }}\n            startDelay={1000}\n            cursorColor=\"#979696\"\n            hideCursorAfterText={true}\n            text=\"Hi, my name is Tushar\"\n            typeSpeed={100}\n          />\n          <TypeWriterEffect\n            textStyle={{\n              fontSize: \"40px\",\n            }}\n            startDelay={3600}\n            cursorColor=\"#979696\"\n            hideCursorAfterText={true}\n            text=\"I'm a full stack developer\"\n            typeSpeed={100}\n          />\n        </h1>\n      )}\n    </div>\n  );\n}\n\nexport default Intro;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProjectListItem(props) {\n  const { title, thumbnail, blurb, techStack } = props.project.fields;\n  const projectId = props.project.sys.id;\n\n  return (\n    <Link to={`/projects/${projectId}`} className=\"link-underline\">\n      <div className=\"project-card\">\n        <div className=\"project-img-icon\">\n          <img src={thumbnail.fields.file.url} />\n        </div>{\" \"}\n        <div className=\"project-text-listitem\">\n          <h2> {title} </h2>\n          <div className=\"projectpage-text-tech\">{techStack}</div>\n          <p>{blurb}</p>{\" \"}\n        </div>{\" \"}\n      </div>\n    </Link>\n  );\n}\nexport default ProjectListItem;\n","import React from \"react\";\nimport ProjectListItem from \"./ProjectListItem\";\n\nfunction ProjectList(props) {\n  return (\n    <div className=\"project-container\">\n      <h1>Projects :</h1>\n      {props.projects.map((project, index) => {\n        return <ProjectListItem key={index} project={project} />;\n      })}\n    </div>\n  );\n}\n\nexport default ProjectList;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nimport client from \"../client\";\n\nfunction ProjectPage() {\n  const context = useContext(ThemeContext);\n  const [content, setContent] = useState([]);\n  const { projectId } = useParams();\n\n  useEffect(() => {\n    console.log(projectId);\n\n    client\n      .getEntry(projectId)\n      .then((response) => {\n        // console.log(response);\n        setContent(response.fields);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"project-text-heading-container\">\n        <div>\n          <h1> {content.title} </h1>{\" \"}\n          <div className=\"projectpage-text-tech\">{content.techStack}</div>\n        </div>\n        <div className=\"projectpage-text-link-external-container\">\n          {content.livesiteUrl && (\n            <a href={content.livesiteUrl} target=\"_blank\">\n              <button className={`${context.theme}-theme-button link-button`}>\n                <h2 className=\"project-link-external\">Live Site</h2>\n              </button>\n            </a>\n          )}\n          <a href={content.githubUrl} target=\"_blank\">\n            <button className={`${context.theme}-theme-button link-button`}>\n              <h2 className=\"project-link-external\">GitHub</h2>\n            </button>\n          </a>\n        </div>\n      </div>\n      <h4 className=\"projectpage-text-intro\">{content.elevatorPitch}</h4>\n      {/* <div className=\"project-img-feature\"> */}\n      {content.featureImage && (\n        <img\n          src={content.featureImage.fields.file.url}\n          alt={content.title}\n          className=\"project-img-feature\"\n        />\n      )}{\" \"}\n      {/* </div> */}\n      <div\n        className=\"projectpage-text-more\"\n        dangerouslySetInnerHTML={{ __html: content.description }}\n      />\n    </div>\n  );\n}\n\nexport default ProjectPage;\n","import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nfunction ThemeToggle() {\n  const [position, setPosition] = useState(0);\n\n  function changePosition() {\n    setPosition((prevPosition) => (prevPosition === 0 ? 22 : 0));\n  }\n\n  const context = useContext(ThemeContext);\n\n  return (\n    <div className={`${context.theme}-theme-toggle-body toggle-body`}>\n      <div\n        className={`${context.theme}-theme-toggle-switch toggle-switch`}\n        onClick={() => {\n          context.toggleTheme();\n          changePosition();\n        }}\n        style={{ left: position }}\n      ></div>{\" \"}\n    </div>\n  );\n}\n\nThemeToggle.propTypes = {\n  theme: PropTypes.oneOf([\"light\", \"dark\"]),\n};\n\nThemeToggle.defaultProps = {\n  theme: \"light\",\n};\n\nexport default ThemeToggle;\n","import React, { useEffect } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nimport ThemeToggle from \"./ThemeToggle\";\n\nfunction Header() {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return (\n    <div className=\"header\">\n      <h2 className=\"breadcrumb-links\">\n        {pathname === \"/\" ? (\n          <Link to=\"/projects\">projects</Link>\n        ) : (\n          <>\n            / <Link to=\"/\">home</Link> /{\" \"}\n            <a style={{ textDecoration: \"underline\" }} onClick={goBack}>\n              back\n            </a>\n          </>\n        )}\n      </h2>\n      <ThemeToggle />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { ThemeContext } from \"./components/ThemeContext\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport client from \"./client\";\nimport Intro from \"./components/Intro\";\nimport ProjectList from \"./components/ProjectList\";\nimport ProjectPage from \"./components/ProjectPage\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const context = useContext(ThemeContext);\n  const [scrollRan, setScrollRan] = useState(false);\n\n  useEffect(() => {\n    client\n      .getEntries()\n      .then((response) => {\n        // console.log(response.items);\n        setProjects(response.items);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    setTimeout(() => {\n      setScrollRan(true);\n    }, 10000);\n  }, []);\n\n  return (\n    <div className={`${context.theme}-theme container`}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Intro scrollRan={scrollRan} />\n        </Route>\n        <Route exact path=\"/projects\">\n          <ProjectList projects={projects} />\n        </Route>\n        <Route path=\"/projects/:projectId\">\n          <ProjectPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ThemeContextProvider } from \"./components/ThemeContext\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeContextProvider>\n        <App />\n      </ThemeContextProvider>{\" \"}\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}